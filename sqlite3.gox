package main

import (
	"fmt"
	"code.google.com/p/go-sqlite/go1/sqlite3"
)

func main() {
	conn, _ := sqlite3.Open("messages.db")

	create_smt := `
		CREATE TABLE IF NOT EXISTS messages (
			type TEXT,
			room TEXT,
			name TEXT,
			data TEXT,
			username TEXT,
			id TEXT,
			timestamp INTEGER DEFAULT CURRENT_TIMESTAMP NOT NULL
		);
	`

	create_err := conn.Exec(create_smt)

	fmt.Printf("create error %v\n", create_err)
	fmt.Printf("conn %v\n", conn)

	/* args := sqlite3.NamedArgs{
		"$type": "event",
		"$room": "12345",
		"$name": "text",
		"$data": "{\"text\": \"abcxyz\" }",
		"$username": "Kristopher",
		"$id": "abc12345",
	}

	insert_err := conn.Exec("INSERT INTO messages (type, room, name, data, username, id) VALUES ($type, $room, $name, $data, $username, $id);", args)

	if insert_err != nil {
		fmt.Printf("insert error %v\n", insert_err)
	}

	row := make(sqlite3.RowMap)
	for s, err := conn.Query("SELECT * FROM messages;"); err == nil; err = s.Next() {
		var rowid int64
		fmt.Println("loop")
		s.Scan(&rowid, row)     // Assigns 1st column to rowid, the rest to row
		fmt.Println(rowid, row) // Prints "1 map[a:1 b:demo c:<nil>]"
	} */
}
